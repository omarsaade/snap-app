{"version":3,"sources":["shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","user/pages/Auth.js"],"names":["VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialIsValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","formValidity","formState","inputHandler","useCallback","setFormData","inputData","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","style","display","accept","ref","pickedFile","fileIsValid","files","center","src","alt","secondary","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","switchModeHandler","name","undefined","image","motto","prevMode","authSubmitHandler","a","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","onClear","asOverlay","onSubmit","disabled","inverse"],"mappings":"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","file":"static/js/4.124e41c3.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\n\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialIsValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n  const touchHandler = () => {\n    dispatch({ type: 'TOUCH' });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 5}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && 'form-control--invalid'\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useReducer, useCallback } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.isValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, formValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: formValidity,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      isValid: formValidity,\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import { useRef, useState, useEffect } from \"react\";\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = (props) => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  const pickedHandler = (event) => {\n    let pickedFile;\n\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg,.webp\"\n        ref={filePickerRef}\n        onChange={pickedHandler}\n      />\n      <div className={`${props.center && \"centerFC\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" secondary onClick={pickImageHandler}>\n          Pick image\n        </Button>\n        {!isValid && <p>{props.errorText}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import { Fragment, useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\n\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nimport \"./Auth.css\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n          motto: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    }\n    // LOGIN --> SIGNUP\n    if (isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n          motto: {\n            value: \"\",\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    // hon lal log in\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          {\n            \"Content-Type\": \"application/json\",\n          }\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n\n    if (!isLoginMode) {\n      try {\n        const formData = new FormData();\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"motto\", formState.inputs.motto.value);\n        formData.append(\"image\", formState.inputs.image.value);\n\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          \"POST\",\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication-form\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2 className=\"authentication-form-header\">Login Required</h2>\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <ImageUpload\n              id=\"image\"\n              center\n              errorText=\"\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"motto\"\n              type=\"motto\"\n              label=\"Motto\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a motto.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <p className=\"authentication-form-text\">\n              Example: Happiness is Travelling\n            </p>\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"Email\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          {!isLoginMode && (\n            <p className=\"authentication-form-text\">\n              Example: John@company.com\n            </p>\n          )}\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(8)]}\n            errorText=\"Please enter a valid password, at least 8 characters.\"\n            placeholder={isLoginMode ? \"\" : \"Must be at least 8 characters\"}\n            onInput={inputHandler}\n          />\n          <div className=\"authentication-form-actions\">\n            <Button type=\"submit\" secondary disabled={!formState.isValid}>\n              {isLoginMode ? \"Login\" : \"Signup\"}\n            </Button>\n            {isLoginMode ? (\n              <Button\n                type=\"button\"\n                onClick={switchModeHandler}\n                inverse\n                secondary\n              >\n                Join now\n              </Button>\n            ) : (\n              <Button\n                type=\"button\"\n                onClick={switchModeHandler}\n                inverse\n                secondary\n              >\n                Switch to login\n              </Button>\n            )}\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Auth;\n"],"sourceRoot":""}